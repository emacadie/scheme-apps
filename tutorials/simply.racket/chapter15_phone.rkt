#lang simply-scheme

; Chapter 15: Advanced Recursion, Phone problem

(require "more-simply.rkt")

(butfirst '(This is chapter 15 advanced recursion phone problem))

;; Chapter 15 Advanced Recursion

;; Again, I think tail-recursion results in larger code

;; From the text:
;; "Sometimes you write a recursive procedure with a correct recursive case and a reasonable base case, 
;; but the program still doesn't work. 
;; The trouble may be that the base case doesn't quite catch all of the ways in which the problem can get smaller. 
;; A second base case may be needed."
;; I don't know what this says about me, but I have already come across that. 
;; Perhaps because I am trying to make everything tail-recursive.

;; more words of wisdom from the text:
;; You may be thinking that you never would have thought of that yourself. 
;; But we're just following the method: 
;; Look at the smaller case and see how it fits into the original problem.

;; 15.5 Suppose you have a phone number, such as 223-5766, and you'd like to figure out a clever way to spell it in letters for your friends to remember. 
;; Each digit corresponds to three possible letters. 
;; For example, the digit 2 corresponds to the letters A, B, and C. 
;; Write a procedure that takes a number as argument and returns a sentence of all the possible spellings:
;; > (phone-spell 2235766)
;; (AADJPMM AADJPMN ...CCFLSOO)
;; (We're not showing you all 2187 words in this sentence.) 
;; You may assume there are no zeros or ones in the number, since those don't have letters.
;; Hint: This problem has a lot in common with the subsets example. 
(define big-table '(1 'abc 'def 'ghi 'jkl 'mno 'pqrs 'tuv 'wxyz))
(define (table-item num)
  (cond [(member? num '01) num]
        [(member? num '123456789) (item 2 (item num big-table))]
        [else 0]))

;; try with some higher-order functions, then convert
; (first-combine 'a 'def)
; (first-combine 'a '(def ghi))
;; combines a list with a letter
(define (first-combine lttr list-b)
  (every (lambda (x) (word x lttr)) list-b))

; (first-combine-r 'a 'def '())
; (first-combine-r 'a '(def ghi) '())
(define (first-combine-r lttr sent outp)
  ; (display-all "calling every-tail-r with sent: " sent ", outp: " outp)
  (if (empty? sent)
      outp ;; base case returns output
      (first-combine-r lttr (bf sent) (se outp (word (first sent) lttr)))))

;; combine abc with def
; (higher-combine 'abc 'def)
; (higher-combine 'abc '(def jgk))
; (higher-combine (higher-combine (higher-combine 'def 'mno) 'wxyz) 'wxyz)
; (higher-combine (higher-combine (higher-combine (higher-combine (higher-combine (higher-combine 'def 'mno) 'wxyz) 'wxyz) 'def) 'jkl) 'mno)
(define (higher-combine list-a list-b)
  (every (lambda (x) (first-combine x list-a)) list-b))

; (higher-combine-r 'abc 'def '())
(define (recurs-combine list-a list-b outp)
  (if (empty? list-b)
      outp ;; base case returns output
      (recurs-combine list-a 
                      (bf list-b) 
                      (se outp 
                          (first-combine-r (first list-b) 
                                           list-a '() )))))

; (build-num-lttr-list 2345678 '())
;; returns '(abc def ghi jkl mno pqrs tuv)
(define (build-num-lttr-list the-num outp)
  (cond [(empty? the-num) outp]
        [else (build-num-lttr-list (butfirst the-num) 
                                   (sentence outp 
                                             (table-item (first the-num))))]))
;; get a list from build-num-lttr-list
; (try-phone-with-higher (build-num-lttr-list 2345678 '()) '())
(define (try-phone-with-higher lttr-list outp)
  (cond [(empty? lttr-list) outp]
        [(empty? outp) (try-phone-with-higher (butfirst (butfirst lttr-list)) 
                                              (higher-combine (first lttr-list) 
                                                              (simply-second lttr-list)))]
        [else (try-phone-with-higher (butfirst lttr-list) 
                                     (higher-combine outp 
                                                     (first lttr-list)))]))

;; get a list from build-num-lttr-list
; (try-phone-with-recursion (build-num-lttr-list 2345678 '()) '())
(define (try-phone-with-recursion lttr-list outp)
  (cond [(empty? lttr-list) outp]
        [(empty? outp) (try-phone-with-recursion (butfirst (butfirst lttr-list)) 
                                                 (recurs-combine (first lttr-list) 
                                                                 (simply-second lttr-list)
                                                                 '()))]
        [else (try-phone-with-recursion (butfirst lttr-list) 
                                        (recurs-combine outp 
                                                        (first lttr-list)
                                                        '()))]))
;; Call this
;; (first-phone-spell 1234567)
(define (first-phone-spell pnum)
  (try-phone-with-higher (build-num-lttr-list pnum '()) '()))
;; same number of results as the other person, 
;; but although it took me a while,
;; according to githib they gave up and came back six years later
;; although they did follow the text's recommendation better

;; their solution
;; from https://github.com/buntine/Simply-Scheme-Exercises/blob/master/15-advanced-recursion/15-5.scm
(define (letters-o n)
  (cond ((= n 2) (se 'a 'b 'c))
        ((= n 3) (se 'd 'e 'f))
        ((= n 4) (se 'g 'h 'i))
        ((= n 5) (se 'j 'k 'l))
        ((= n 6) (se 'm 'n 'o))
        ((= n 7) (se 'p 'q 'r 's))
        ((= n 8) (se 't 'u 'v))
        ((= n 9) (se 'w 'x 'y 'z))
        (else n)))

; (prepend-every-o 'q '(well how are you))
; gives: '(qwell qhow qare qyou)
(define (prepend-every-o letter sent)
  (if (empty? sent)
      '()
      (se (word letter (first sent))
          (prepend-every-o letter (bf sent)))))
;; (prepend-each-o '(hey- man-) '(how are you))
;; '(man-how man-are man-you hey-how hey-are hey-you)
(define (prepend-each-o a b)
  (if (empty? a)
    '()
    (se (prepend-each-o (bf a) b)
        (prepend-every-o (first a) b))))
;; Not tail recursive, I do not think it can be tail recursive.
(define (phone-spell-o n)
  (if (empty? n)
    (se "")
    (se
      (prepend-each-o (letters-o (first n))
                      (phone-spell-o (bf n))))))

;; convert theirs to tail recursive
;; (prepend-every-r 'q '(well how are you) '())
;; gives '(qwell qhow qare qyou)
(define (prepend-every-r letter sent outp)
  (if (empty? sent)
      outp
      (prepend-every-r letter (bf sent) (se outp (word letter (first sent))))))
;; (prepend-each-r '(hey- man-) '(how are you) '())
;; gives '(man-how man-are man-you hey-how hey-are hey-you)
(define (prepend-each-r a b outp)
  (if (empty? a)
    outp
    (se (prepend-each-r (bf a) b outp)
        (prepend-every-r (first a) b '()))))

(define (phone-spell-r n outp)
  (if (empty? n)
    outp
    (phone-spell-r (bf n) (se (prepend-each-r (letters-o (first n)) (bf n) outp))
                   )
    ;(se     
    ;  (prepend-each-r (letters-o (first n))
    ;                  (phone-spell-r (bf n) '())
    ;                  outp))
))  
;; I can't get this to work. So maybe I don't get the text's recommendation.

(module+ test
  (require rackunit)
  (check-true #t)

  (printf "(table-item 0): ~a \n"(table-item 0) )
  (check-equal? (table-item 0) 0  "Error for: (table-item 0)")
  (printf "(table-item 1): ~a \n" (table-item 1))
  (check-equal? (table-item 1) 1 "Error for: (table-item 1)")
  (printf "(table-item 2): ~a \n" (table-item 2) )
  (check-equal? (table-item 2) 'abc "Error for: (table-item 2)")

  (printf "(first-combine 'a 'def): ~a \n" (first-combine 'a 'def))
  (check-equal? (first-combine 'a 'def) '(da ea fa) "Error for: (first-combine 'a 'def)")
  (printf "(first-combine 'a '(def ghi)): ~a \n" (first-combine 'a '(def ghi)))
  (check-equal? (first-combine 'a '(def ghi)) '(defa ghia) "Error for: (first-combine 'a '(def ghi))")
  (printf "(first-combine-r 'a 'def '()): ~a \n" (first-combine-r 'a 'def '())) 
  (check-equal? (first-combine-r 'a 'def '())  '(da ea fa) "Error for: (first-combine-r 'a 'def '())")
  (printf "(first-combine-r 'a '(def ghi) '()): ~a \n" (first-combine-r 'a '(def ghi) '()))
  (check-equal? (first-combine-r 'a '(def ghi) '()) '(defa ghia) "Error for: (first-combine-r 'a '(def ghi) '())")

  (printf "(higher-combine 'abc 'def): ~a \n" (higher-combine 'abc 'def))
  (check-equal? (higher-combine 'abc 'def) '(ad bd cd ae be ce af bf cf) "Error for: (higher-combine 'abc 'def)")
  (printf "(higher-combine 'abc '(def jgk)): ~a \n" (higher-combine 'abc '(def jgk)))
  (check-equal? (higher-combine 'abc '(def jgk)) '(adef bdef cdef ajgk bjgk cjgk)  "Error for: (higher-combine 'abc '(def jgk))")
  (printf "(recurs-combine 'abc 'def '()): ~a \n" (recurs-combine 'abc 'def '()))
  (check-equal? (recurs-combine 'abc 'def '()) '(ad bd cd ae be ce af bf cf) "Error for: (recurs-combine 'abc 'def '())")
  (printf "(recurs-combine 'abc '(def jgk)'()): ~a \n" (recurs-combine 'abc '(def jgk)'()))
  (check-equal? (recurs-combine 'abc '(def jgk)'()) '(adef bdef cdef ajgk bjgk cjgk) "Error for: (recurs-combine 'abc '(def jgk)'())")

  (printf "(build-num-lttr-list 2345678 '()): ~a \n" (build-num-lttr-list 2345678 '()))
  (check-equal? (build-num-lttr-list 2345678 '()) '(abc def ghi jkl mno pqrs tuv) "Error for: (build-num-lttr-list 2345678 '())")

;; Oh, yes, we're going there.
  (printf "(try-phone-with-higher (build-num-lttr-list 2345678 '()) '()): **OUTPUT OMITTED \n" )
  (check-equal? (try-phone-with-higher (build-num-lttr-list 2345678 '()) '())  
                '(adgjmpt
  bdgjmpt
  cdgjmpt
  aegjmpt
  begjmpt
  cegjmpt
  afgjmpt
  bfgjmpt
  cfgjmpt
  adhjmpt
  bdhjmpt
  cdhjmpt
  aehjmpt
  behjmpt
  cehjmpt
  afhjmpt
  bfhjmpt
  cfhjmpt
  adijmpt
  bdijmpt
  cdijmpt
  aeijmpt
  beijmpt
  ceijmpt
  afijmpt
  bfijmpt
  cfijmpt
  adgkmpt
  bdgkmpt
  cdgkmpt
  aegkmpt
  begkmpt
  cegkmpt
  afgkmpt
  bfgkmpt
  cfgkmpt
  adhkmpt
  bdhkmpt
  cdhkmpt
  aehkmpt
  behkmpt
  cehkmpt
  afhkmpt
  bfhkmpt
  cfhkmpt
  adikmpt
  bdikmpt
  cdikmpt
  aeikmpt
  beikmpt
  ceikmpt
  afikmpt
  bfikmpt
  cfikmpt
  adglmpt
  bdglmpt
  cdglmpt
  aeglmpt
  beglmpt
  ceglmpt
  afglmpt
  bfglmpt
  cfglmpt
  adhlmpt
  bdhlmpt
  cdhlmpt
  aehlmpt
  behlmpt
  cehlmpt
  afhlmpt
  bfhlmpt
  cfhlmpt
  adilmpt
  bdilmpt
  cdilmpt
  aeilmpt
  beilmpt
  ceilmpt
  afilmpt
  bfilmpt
  cfilmpt
  adgjnpt
  bdgjnpt
  cdgjnpt
  aegjnpt
  begjnpt
  cegjnpt
  afgjnpt
  bfgjnpt
  cfgjnpt
  adhjnpt
  bdhjnpt
  cdhjnpt
  aehjnpt
  behjnpt
  cehjnpt
  afhjnpt
  bfhjnpt
  cfhjnpt
  adijnpt
  bdijnpt
  cdijnpt
  aeijnpt
  beijnpt
  ceijnpt
  afijnpt
  bfijnpt
  cfijnpt
  adgknpt
  bdgknpt
  cdgknpt
  aegknpt
  begknpt
  cegknpt
  afgknpt
  bfgknpt
  cfgknpt
  adhknpt
  bdhknpt
  cdhknpt
  aehknpt
  behknpt
  cehknpt
  afhknpt
  bfhknpt
  cfhknpt
  adiknpt
  bdiknpt
  cdiknpt
  aeiknpt
  beiknpt
  ceiknpt
  afiknpt
  bfiknpt
  cfiknpt
  adglnpt
  bdglnpt
  cdglnpt
  aeglnpt
  beglnpt
  ceglnpt
  afglnpt
  bfglnpt
  cfglnpt
  adhlnpt
  bdhlnpt
  cdhlnpt
  aehlnpt
  behlnpt
  cehlnpt
  afhlnpt
  bfhlnpt
  cfhlnpt
  adilnpt
  bdilnpt
  cdilnpt
  aeilnpt
  beilnpt
  ceilnpt
  afilnpt
  bfilnpt
  cfilnpt
  adgjopt
  bdgjopt
  cdgjopt
  aegjopt
  begjopt
  cegjopt
  afgjopt
  bfgjopt
  cfgjopt
  adhjopt
  bdhjopt
  cdhjopt
  aehjopt
  behjopt
  cehjopt
  afhjopt
  bfhjopt
  cfhjopt
  adijopt
  bdijopt
  cdijopt
  aeijopt
  beijopt
  ceijopt
  afijopt
  bfijopt
  cfijopt
  adgkopt
  bdgkopt
  cdgkopt
  aegkopt
  begkopt
  cegkopt
  afgkopt
  bfgkopt
  cfgkopt
  adhkopt
  bdhkopt
  cdhkopt
  aehkopt
  behkopt
  cehkopt
  afhkopt
  bfhkopt
  cfhkopt
  adikopt
  bdikopt
  cdikopt
  aeikopt
  beikopt
  ceikopt
  afikopt
  bfikopt
  cfikopt
  adglopt
  bdglopt
  cdglopt
  aeglopt
  beglopt
  ceglopt
  afglopt
  bfglopt
  cfglopt
  adhlopt
  bdhlopt
  cdhlopt
  aehlopt
  behlopt
  cehlopt
  afhlopt
  bfhlopt
  cfhlopt
  adilopt
  bdilopt
  cdilopt
  aeilopt
  beilopt
  ceilopt
  afilopt
  bfilopt
  cfilopt
  adgjmqt
  bdgjmqt
  cdgjmqt
  aegjmqt
  begjmqt
  cegjmqt
  afgjmqt
  bfgjmqt
  cfgjmqt
  adhjmqt
  bdhjmqt
  cdhjmqt
  aehjmqt
  behjmqt
  cehjmqt
  afhjmqt
  bfhjmqt
  cfhjmqt
  adijmqt
  bdijmqt
  cdijmqt
  aeijmqt
  beijmqt
  ceijmqt
  afijmqt
  bfijmqt
  cfijmqt
  adgkmqt
  bdgkmqt
  cdgkmqt
  aegkmqt
  begkmqt
  cegkmqt
  afgkmqt
  bfgkmqt
  cfgkmqt
  adhkmqt
  bdhkmqt
  cdhkmqt
  aehkmqt
  behkmqt
  cehkmqt
  afhkmqt
  bfhkmqt
  cfhkmqt
  adikmqt
  bdikmqt
  cdikmqt
  aeikmqt
  beikmqt
  ceikmqt
  afikmqt
  bfikmqt
  cfikmqt
  adglmqt
  bdglmqt
  cdglmqt
  aeglmqt
  beglmqt
  ceglmqt
  afglmqt
  bfglmqt
  cfglmqt
  adhlmqt
  bdhlmqt
  cdhlmqt
  aehlmqt
  behlmqt
  cehlmqt
  afhlmqt
  bfhlmqt
  cfhlmqt
  adilmqt
  bdilmqt
  cdilmqt
  aeilmqt
  beilmqt
  ceilmqt
  afilmqt
  bfilmqt
  cfilmqt
  adgjnqt
  bdgjnqt
  cdgjnqt
  aegjnqt
  begjnqt
  cegjnqt
  afgjnqt
  bfgjnqt
  cfgjnqt
  adhjnqt
  bdhjnqt
  cdhjnqt
  aehjnqt
  behjnqt
  cehjnqt
  afhjnqt
  bfhjnqt
  cfhjnqt
  adijnqt
  bdijnqt
  cdijnqt
  aeijnqt
  beijnqt
  ceijnqt
  afijnqt
  bfijnqt
  cfijnqt
  adgknqt
  bdgknqt
  cdgknqt
  aegknqt
  begknqt
  cegknqt
  afgknqt
  bfgknqt
  cfgknqt
  adhknqt
  bdhknqt
  cdhknqt
  aehknqt
  behknqt
  cehknqt
  afhknqt
  bfhknqt
  cfhknqt
  adiknqt
  bdiknqt
  cdiknqt
  aeiknqt
  beiknqt
  ceiknqt
  afiknqt
  bfiknqt
  cfiknqt
  adglnqt
  bdglnqt
  cdglnqt
  aeglnqt
  beglnqt
  ceglnqt
  afglnqt
  bfglnqt
  cfglnqt
  adhlnqt
  bdhlnqt
  cdhlnqt
  aehlnqt
  behlnqt
  cehlnqt
  afhlnqt
  bfhlnqt
  cfhlnqt
  adilnqt
  bdilnqt
  cdilnqt
  aeilnqt
  beilnqt
  ceilnqt
  afilnqt
  bfilnqt
  cfilnqt
  adgjoqt
  bdgjoqt
  cdgjoqt
  aegjoqt
  begjoqt
  cegjoqt
  afgjoqt
  bfgjoqt
  cfgjoqt
  adhjoqt
  bdhjoqt
  cdhjoqt
  aehjoqt
  behjoqt
  cehjoqt
  afhjoqt
  bfhjoqt
  cfhjoqt
  adijoqt
  bdijoqt
  cdijoqt
  aeijoqt
  beijoqt
  ceijoqt
  afijoqt
  bfijoqt
  cfijoqt
  adgkoqt
  bdgkoqt
  cdgkoqt
  aegkoqt
  begkoqt
  cegkoqt
  afgkoqt
  bfgkoqt
  cfgkoqt
  adhkoqt
  bdhkoqt
  cdhkoqt
  aehkoqt
  behkoqt
  cehkoqt
  afhkoqt
  bfhkoqt
  cfhkoqt
  adikoqt
  bdikoqt
  cdikoqt
  aeikoqt
  beikoqt
  ceikoqt
  afikoqt
  bfikoqt
  cfikoqt
  adgloqt
  bdgloqt
  cdgloqt
  aegloqt
  begloqt
  cegloqt
  afgloqt
  bfgloqt
  cfgloqt
  adhloqt
  bdhloqt
  cdhloqt
  aehloqt
  behloqt
  cehloqt
  afhloqt
  bfhloqt
  cfhloqt
  adiloqt
  bdiloqt
  cdiloqt
  aeiloqt
  beiloqt
  ceiloqt
  afiloqt
  bfiloqt
  cfiloqt
  adgjmrt
  bdgjmrt
  cdgjmrt
  aegjmrt
  begjmrt
  cegjmrt
  afgjmrt
  bfgjmrt
  cfgjmrt
  adhjmrt
  bdhjmrt
  cdhjmrt
  aehjmrt
  behjmrt
  cehjmrt
  afhjmrt
  bfhjmrt
  cfhjmrt
  adijmrt
  bdijmrt
  cdijmrt
  aeijmrt
  beijmrt
  ceijmrt
  afijmrt
  bfijmrt
  cfijmrt
  adgkmrt
  bdgkmrt
  cdgkmrt
  aegkmrt
  begkmrt
  cegkmrt
  afgkmrt
  bfgkmrt
  cfgkmrt
  adhkmrt
  bdhkmrt
  cdhkmrt
  aehkmrt
  behkmrt
  cehkmrt
  afhkmrt
  bfhkmrt
  cfhkmrt
  adikmrt
  bdikmrt
  cdikmrt
  aeikmrt
  beikmrt
  ceikmrt
  afikmrt
  bfikmrt
  cfikmrt
  adglmrt
  bdglmrt
  cdglmrt
  aeglmrt
  beglmrt
  ceglmrt
  afglmrt
  bfglmrt
  cfglmrt
  adhlmrt
  bdhlmrt
  cdhlmrt
  aehlmrt
  behlmrt
  cehlmrt
  afhlmrt
  bfhlmrt
  cfhlmrt
  adilmrt
  bdilmrt
  cdilmrt
  aeilmrt
  beilmrt
  ceilmrt
  afilmrt
  bfilmrt
  cfilmrt
  adgjnrt
  bdgjnrt
  cdgjnrt
  aegjnrt
  begjnrt
  cegjnrt
  afgjnrt
  bfgjnrt
  cfgjnrt
  adhjnrt
  bdhjnrt
  cdhjnrt
  aehjnrt
  behjnrt
  cehjnrt
  afhjnrt
  bfhjnrt
  cfhjnrt
  adijnrt
  bdijnrt
  cdijnrt
  aeijnrt
  beijnrt
  ceijnrt
  afijnrt
  bfijnrt
  cfijnrt
  adgknrt
  bdgknrt
  cdgknrt
  aegknrt
  begknrt
  cegknrt
  afgknrt
  bfgknrt
  cfgknrt
  adhknrt
  bdhknrt
  cdhknrt
  aehknrt
  behknrt
  cehknrt
  afhknrt
  bfhknrt
  cfhknrt
  adiknrt
  bdiknrt
  cdiknrt
  aeiknrt
  beiknrt
  ceiknrt
  afiknrt
  bfiknrt
  cfiknrt
  adglnrt
  bdglnrt
  cdglnrt
  aeglnrt
  beglnrt
  ceglnrt
  afglnrt
  bfglnrt
  cfglnrt
  adhlnrt
  bdhlnrt
  cdhlnrt
  aehlnrt
  behlnrt
  cehlnrt
  afhlnrt
  bfhlnrt
  cfhlnrt
  adilnrt
  bdilnrt
  cdilnrt
  aeilnrt
  beilnrt
  ceilnrt
  afilnrt
  bfilnrt
  cfilnrt
  adgjort
  bdgjort
  cdgjort
  aegjort
  begjort
  cegjort
  afgjort
  bfgjort
  cfgjort
  adhjort
  bdhjort
  cdhjort
  aehjort
  behjort
  cehjort
  afhjort
  bfhjort
  cfhjort
  adijort
  bdijort
  cdijort
  aeijort
  beijort
  ceijort
  afijort
  bfijort
  cfijort
  adgkort
  bdgkort
  cdgkort
  aegkort
  begkort
  cegkort
  afgkort
  bfgkort
  cfgkort
  adhkort
  bdhkort
  cdhkort
  aehkort
  behkort
  cehkort
  afhkort
  bfhkort
  cfhkort
  adikort
  bdikort
  cdikort
  aeikort
  beikort
  ceikort
  afikort
  bfikort
  cfikort
  adglort
  bdglort
  cdglort
  aeglort
  beglort
  ceglort
  afglort
  bfglort
  cfglort
  adhlort
  bdhlort
  cdhlort
  aehlort
  behlort
  cehlort
  afhlort
  bfhlort
  cfhlort
  adilort
  bdilort
  cdilort
  aeilort
  beilort
  ceilort
  afilort
  bfilort
  cfilort
  adgjmst
  bdgjmst
  cdgjmst
  aegjmst
  begjmst
  cegjmst
  afgjmst
  bfgjmst
  cfgjmst
  adhjmst
  bdhjmst
  cdhjmst
  aehjmst
  behjmst
  cehjmst
  afhjmst
  bfhjmst
  cfhjmst
  adijmst
  bdijmst
  cdijmst
  aeijmst
  beijmst
  ceijmst
  afijmst
  bfijmst
  cfijmst
  adgkmst
  bdgkmst
  cdgkmst
  aegkmst
  begkmst
  cegkmst
  afgkmst
  bfgkmst
  cfgkmst
  adhkmst
  bdhkmst
  cdhkmst
  aehkmst
  behkmst
  cehkmst
  afhkmst
  bfhkmst
  cfhkmst
  adikmst
  bdikmst
  cdikmst
  aeikmst
  beikmst
  ceikmst
  afikmst
  bfikmst
  cfikmst
  adglmst
  bdglmst
  cdglmst
  aeglmst
  beglmst
  ceglmst
  afglmst
  bfglmst
  cfglmst
  adhlmst
  bdhlmst
  cdhlmst
  aehlmst
  behlmst
  cehlmst
  afhlmst
  bfhlmst
  cfhlmst
  adilmst
  bdilmst
  cdilmst
  aeilmst
  beilmst
  ceilmst
  afilmst
  bfilmst
  cfilmst
  adgjnst
  bdgjnst
  cdgjnst
  aegjnst
  begjnst
  cegjnst
  afgjnst
  bfgjnst
  cfgjnst
  adhjnst
  bdhjnst
  cdhjnst
  aehjnst
  behjnst
  cehjnst
  afhjnst
  bfhjnst
  cfhjnst
  adijnst
  bdijnst
  cdijnst
  aeijnst
  beijnst
  ceijnst
  afijnst
  bfijnst
  cfijnst
  adgknst
  bdgknst
  cdgknst
  aegknst
  begknst
  cegknst
  afgknst
  bfgknst
  cfgknst
  adhknst
  bdhknst
  cdhknst
  aehknst
  behknst
  cehknst
  afhknst
  bfhknst
  cfhknst
  adiknst
  bdiknst
  cdiknst
  aeiknst
  beiknst
  ceiknst
  afiknst
  bfiknst
  cfiknst
  adglnst
  bdglnst
  cdglnst
  aeglnst
  beglnst
  ceglnst
  afglnst
  bfglnst
  cfglnst
  adhlnst
  bdhlnst
  cdhlnst
  aehlnst
  behlnst
  cehlnst
  afhlnst
  bfhlnst
  cfhlnst
  adilnst
  bdilnst
  cdilnst
  aeilnst
  beilnst
  ceilnst
  afilnst
  bfilnst
  cfilnst
  adgjost
  bdgjost
  cdgjost
  aegjost
  begjost
  cegjost
  afgjost
  bfgjost
  cfgjost
  adhjost
  bdhjost
  cdhjost
  aehjost
  behjost
  cehjost
  afhjost
  bfhjost
  cfhjost
  adijost
  bdijost
  cdijost
  aeijost
  beijost
  ceijost
  afijost
  bfijost
  cfijost
  adgkost
  bdgkost
  cdgkost
  aegkost
  begkost
  cegkost
  afgkost
  bfgkost
  cfgkost
  adhkost
  bdhkost
  cdhkost
  aehkost
  behkost
  cehkost
  afhkost
  bfhkost
  cfhkost
  adikost
  bdikost
  cdikost
  aeikost
  beikost
  ceikost
  afikost
  bfikost
  cfikost
  adglost
  bdglost
  cdglost
  aeglost
  beglost
  ceglost
  afglost
  bfglost
  cfglost
  adhlost
  bdhlost
  cdhlost
  aehlost
  behlost
  cehlost
  afhlost
  bfhlost
  cfhlost
  adilost
  bdilost
  cdilost
  aeilost
  beilost
  ceilost
  afilost
  bfilost
  cfilost
  adgjmpu
  bdgjmpu
  cdgjmpu
  aegjmpu
  begjmpu
  cegjmpu
  afgjmpu
  bfgjmpu
  cfgjmpu
  adhjmpu
  bdhjmpu
  cdhjmpu
  aehjmpu
  behjmpu
  cehjmpu
  afhjmpu
  bfhjmpu
  cfhjmpu
  adijmpu
  bdijmpu
  cdijmpu
  aeijmpu
  beijmpu
  ceijmpu
  afijmpu
  bfijmpu
  cfijmpu
  adgkmpu
  bdgkmpu
  cdgkmpu
  aegkmpu
  begkmpu
  cegkmpu
  afgkmpu
  bfgkmpu
  cfgkmpu
  adhkmpu
  bdhkmpu
  cdhkmpu
  aehkmpu
  behkmpu
  cehkmpu
  afhkmpu
  bfhkmpu
  cfhkmpu
  adikmpu
  bdikmpu
  cdikmpu
  aeikmpu
  beikmpu
  ceikmpu
  afikmpu
  bfikmpu
  cfikmpu
  adglmpu
  bdglmpu
  cdglmpu
  aeglmpu
  beglmpu
  ceglmpu
  afglmpu
  bfglmpu
  cfglmpu
  adhlmpu
  bdhlmpu
  cdhlmpu
  aehlmpu
  behlmpu
  cehlmpu
  afhlmpu
  bfhlmpu
  cfhlmpu
  adilmpu
  bdilmpu
  cdilmpu
  aeilmpu
  beilmpu
  ceilmpu
  afilmpu
  bfilmpu
  cfilmpu
  adgjnpu
  bdgjnpu
  cdgjnpu
  aegjnpu
  begjnpu
  cegjnpu
  afgjnpu
  bfgjnpu
  cfgjnpu
  adhjnpu
  bdhjnpu
  cdhjnpu
  aehjnpu
  behjnpu
  cehjnpu
  afhjnpu
  bfhjnpu
  cfhjnpu
  adijnpu
  bdijnpu
  cdijnpu
  aeijnpu
  beijnpu
  ceijnpu
  afijnpu
  bfijnpu
  cfijnpu
  adgknpu
  bdgknpu
  cdgknpu
  aegknpu
  begknpu
  cegknpu
  afgknpu
  bfgknpu
  cfgknpu
  adhknpu
  bdhknpu
  cdhknpu
  aehknpu
  behknpu
  cehknpu
  afhknpu
  bfhknpu
  cfhknpu
  adiknpu
  bdiknpu
  cdiknpu
  aeiknpu
  beiknpu
  ceiknpu
  afiknpu
  bfiknpu
  cfiknpu
  adglnpu
  bdglnpu
  cdglnpu
  aeglnpu
  beglnpu
  ceglnpu
  afglnpu
  bfglnpu
  cfglnpu
  adhlnpu
  bdhlnpu
  cdhlnpu
  aehlnpu
  behlnpu
  cehlnpu
  afhlnpu
  bfhlnpu
  cfhlnpu
  adilnpu
  bdilnpu
  cdilnpu
  aeilnpu
  beilnpu
  ceilnpu
  afilnpu
  bfilnpu
  cfilnpu
  adgjopu
  bdgjopu
  cdgjopu
  aegjopu
  begjopu
  cegjopu
  afgjopu
  bfgjopu
  cfgjopu
  adhjopu
  bdhjopu
  cdhjopu
  aehjopu
  behjopu
  cehjopu
  afhjopu
  bfhjopu
  cfhjopu
  adijopu
  bdijopu
  cdijopu
  aeijopu
  beijopu
  ceijopu
  afijopu
  bfijopu
  cfijopu
  adgkopu
  bdgkopu
  cdgkopu
  aegkopu
  begkopu
  cegkopu
  afgkopu
  bfgkopu
  cfgkopu
  adhkopu
  bdhkopu
  cdhkopu
  aehkopu
  behkopu
  cehkopu
  afhkopu
  bfhkopu
  cfhkopu
  adikopu
  bdikopu
  cdikopu
  aeikopu
  beikopu
  ceikopu
  afikopu
  bfikopu
  cfikopu
  adglopu
  bdglopu
  cdglopu
  aeglopu
  beglopu
  ceglopu
  afglopu
  bfglopu
  cfglopu
  adhlopu
  bdhlopu
  cdhlopu
  aehlopu
  behlopu
  cehlopu
  afhlopu
  bfhlopu
  cfhlopu
  adilopu
  bdilopu
  cdilopu
  aeilopu
  beilopu
  ceilopu
  afilopu
  bfilopu
  cfilopu
  adgjmqu
  bdgjmqu
  cdgjmqu
  aegjmqu
  begjmqu
  cegjmqu
  afgjmqu
  bfgjmqu
  cfgjmqu
  adhjmqu
  bdhjmqu
  cdhjmqu
  aehjmqu
  behjmqu
  cehjmqu
  afhjmqu
  bfhjmqu
  cfhjmqu
  adijmqu
  bdijmqu
  cdijmqu
  aeijmqu
  beijmqu
  ceijmqu
  afijmqu
  bfijmqu
  cfijmqu
  adgkmqu
  bdgkmqu
  cdgkmqu
  aegkmqu
  begkmqu
  cegkmqu
  afgkmqu
  bfgkmqu
  cfgkmqu
  adhkmqu
  bdhkmqu
  cdhkmqu
  aehkmqu
  behkmqu
  cehkmqu
  afhkmqu
  bfhkmqu
  cfhkmqu
  adikmqu
  bdikmqu
  cdikmqu
  aeikmqu
  beikmqu
  ceikmqu
  afikmqu
  bfikmqu
  cfikmqu
  adglmqu
  bdglmqu
  cdglmqu
  aeglmqu
  beglmqu
  ceglmqu
  afglmqu
  bfglmqu
  cfglmqu
  adhlmqu
  bdhlmqu
  cdhlmqu
  aehlmqu
  behlmqu
  cehlmqu
  afhlmqu
  bfhlmqu
  cfhlmqu
  adilmqu
  bdilmqu
  cdilmqu
  aeilmqu
  beilmqu
  ceilmqu
  afilmqu
  bfilmqu
  cfilmqu
  adgjnqu
  bdgjnqu
  cdgjnqu
  aegjnqu
  begjnqu
  cegjnqu
  afgjnqu
  bfgjnqu
  cfgjnqu
  adhjnqu
  bdhjnqu
  cdhjnqu
  aehjnqu
  behjnqu
  cehjnqu
  afhjnqu
  bfhjnqu
  cfhjnqu
  adijnqu
  bdijnqu
  cdijnqu
  aeijnqu
  beijnqu
  ceijnqu
  afijnqu
  bfijnqu
  cfijnqu
  adgknqu
  bdgknqu
  cdgknqu
  aegknqu
  begknqu
  cegknqu
  afgknqu
  bfgknqu
  cfgknqu
  adhknqu
  bdhknqu
  cdhknqu
  aehknqu
  behknqu
  cehknqu
  afhknqu
  bfhknqu
  cfhknqu
  adiknqu
  bdiknqu
  cdiknqu
  aeiknqu
  beiknqu
  ceiknqu
  afiknqu
  bfiknqu
  cfiknqu
  adglnqu
  bdglnqu
  cdglnqu
  aeglnqu
  beglnqu
  ceglnqu
  afglnqu
  bfglnqu
  cfglnqu
  adhlnqu
  bdhlnqu
  cdhlnqu
  aehlnqu
  behlnqu
  cehlnqu
  afhlnqu
  bfhlnqu
  cfhlnqu
  adilnqu
  bdilnqu
  cdilnqu
  aeilnqu
  beilnqu
  ceilnqu
  afilnqu
  bfilnqu
  cfilnqu
  adgjoqu
  bdgjoqu
  cdgjoqu
  aegjoqu
  begjoqu
  cegjoqu
  afgjoqu
  bfgjoqu
  cfgjoqu
  adhjoqu
  bdhjoqu
  cdhjoqu
  aehjoqu
  behjoqu
  cehjoqu
  afhjoqu
  bfhjoqu
  cfhjoqu
  adijoqu
  bdijoqu
  cdijoqu
  aeijoqu
  beijoqu
  ceijoqu
  afijoqu
  bfijoqu
  cfijoqu
  adgkoqu
  bdgkoqu
  cdgkoqu
  aegkoqu
  begkoqu
  cegkoqu
  afgkoqu
  bfgkoqu
  cfgkoqu
  adhkoqu
  bdhkoqu
  cdhkoqu
  aehkoqu
  behkoqu
  cehkoqu
  afhkoqu
  bfhkoqu
  cfhkoqu
  adikoqu
  bdikoqu
  cdikoqu
  aeikoqu
  beikoqu
  ceikoqu
  afikoqu
  bfikoqu
  cfikoqu
  adgloqu
  bdgloqu
  cdgloqu
  aegloqu
  begloqu
  cegloqu
  afgloqu
  bfgloqu
  cfgloqu
  adhloqu
  bdhloqu
  cdhloqu
  aehloqu
  behloqu
  cehloqu
  afhloqu
  bfhloqu
  cfhloqu
  adiloqu
  bdiloqu
  cdiloqu
  aeiloqu
  beiloqu
  ceiloqu
  afiloqu
  bfiloqu
  cfiloqu
  adgjmru
  bdgjmru
  cdgjmru
  aegjmru
  begjmru
  cegjmru
  afgjmru
  bfgjmru
  cfgjmru
  adhjmru
  bdhjmru
  cdhjmru
  aehjmru
  behjmru
  cehjmru
  afhjmru
  bfhjmru
  cfhjmru
  adijmru
  bdijmru
  cdijmru
  aeijmru
  beijmru
  ceijmru
  afijmru
  bfijmru
  cfijmru
  adgkmru
  bdgkmru
  cdgkmru
  aegkmru
  begkmru
  cegkmru
  afgkmru
  bfgkmru
  cfgkmru
  adhkmru
  bdhkmru
  cdhkmru
  aehkmru
  behkmru
  cehkmru
  afhkmru
  bfhkmru
  cfhkmru
  adikmru
  bdikmru
  cdikmru
  aeikmru
  beikmru
  ceikmru
  afikmru
  bfikmru
  cfikmru
  adglmru
  bdglmru
  cdglmru
  aeglmru
  beglmru
  ceglmru
  afglmru
  bfglmru
  cfglmru
  adhlmru
  bdhlmru
  cdhlmru
  aehlmru
  behlmru
  cehlmru
  afhlmru
  bfhlmru
  cfhlmru
  adilmru
  bdilmru
  cdilmru
  aeilmru
  beilmru
  ceilmru
  afilmru
  bfilmru
  cfilmru
  adgjnru
  bdgjnru
  cdgjnru
  aegjnru
  begjnru
  cegjnru
  afgjnru
  bfgjnru
  cfgjnru
  adhjnru
  bdhjnru
  cdhjnru
  aehjnru
  behjnru
  cehjnru
  afhjnru
  bfhjnru
  cfhjnru
  adijnru
  bdijnru
  cdijnru
  aeijnru
  beijnru
  ceijnru
  afijnru
  bfijnru
  cfijnru
  adgknru
  bdgknru
  cdgknru
  aegknru
  begknru
  cegknru
  afgknru
  bfgknru
  cfgknru
  adhknru
  bdhknru
  cdhknru
  aehknru
  behknru
  cehknru
  afhknru
  bfhknru
  cfhknru
  adiknru
  bdiknru
  cdiknru
  aeiknru
  beiknru
  ceiknru
  afiknru
  bfiknru
  cfiknru
  adglnru
  bdglnru
  cdglnru
  aeglnru
  beglnru
  ceglnru
  afglnru
  bfglnru
  cfglnru
  adhlnru
  bdhlnru
  cdhlnru
  aehlnru
  behlnru
  cehlnru
  afhlnru
  bfhlnru
  cfhlnru
  adilnru
  bdilnru
  cdilnru
  aeilnru
  beilnru
  ceilnru
  afilnru
  bfilnru
  cfilnru
  adgjoru
  bdgjoru
  cdgjoru
  aegjoru
  begjoru
  cegjoru
  afgjoru
  bfgjoru
  cfgjoru
  adhjoru
  bdhjoru
  cdhjoru
  aehjoru
  behjoru
  cehjoru
  afhjoru
  bfhjoru
  cfhjoru
  adijoru
  bdijoru
  cdijoru
  aeijoru
  beijoru
  ceijoru
  afijoru
  bfijoru
  cfijoru
  adgkoru
  bdgkoru
  cdgkoru
  aegkoru
  begkoru
  cegkoru
  afgkoru
  bfgkoru
  cfgkoru
  adhkoru
  bdhkoru
  cdhkoru
  aehkoru
  behkoru
  cehkoru
  afhkoru
  bfhkoru
  cfhkoru
  adikoru
  bdikoru
  cdikoru
  aeikoru
  beikoru
  ceikoru
  afikoru
  bfikoru
  cfikoru
  adgloru
  bdgloru
  cdgloru
  aegloru
  begloru
  cegloru
  afgloru
  bfgloru
  cfgloru
  adhloru
  bdhloru
  cdhloru
  aehloru
  behloru
  cehloru
  afhloru
  bfhloru
  cfhloru
  adiloru
  bdiloru
  cdiloru
  aeiloru
  beiloru
  ceiloru
  afiloru
  bfiloru
  cfiloru
  adgjmsu
  bdgjmsu
  cdgjmsu
  aegjmsu
  begjmsu
  cegjmsu
  afgjmsu
  bfgjmsu
  cfgjmsu
  adhjmsu
  bdhjmsu
  cdhjmsu
  aehjmsu
  behjmsu
  cehjmsu
  afhjmsu
  bfhjmsu
  cfhjmsu
  adijmsu
  bdijmsu
  cdijmsu
  aeijmsu
  beijmsu
  ceijmsu
  afijmsu
  bfijmsu
  cfijmsu
  adgkmsu
  bdgkmsu
  cdgkmsu
  aegkmsu
  begkmsu
  cegkmsu
  afgkmsu
  bfgkmsu
  cfgkmsu
  adhkmsu
  bdhkmsu
  cdhkmsu
  aehkmsu
  behkmsu
  cehkmsu
  afhkmsu
  bfhkmsu
  cfhkmsu
  adikmsu
  bdikmsu
  cdikmsu
  aeikmsu
  beikmsu
  ceikmsu
  afikmsu
  bfikmsu
  cfikmsu
  adglmsu
  bdglmsu
  cdglmsu
  aeglmsu
  beglmsu
  ceglmsu
  afglmsu
  bfglmsu
  cfglmsu
  adhlmsu
  bdhlmsu
  cdhlmsu
  aehlmsu
  behlmsu
  cehlmsu
  afhlmsu
  bfhlmsu
  cfhlmsu
  adilmsu
  bdilmsu
  cdilmsu
  aeilmsu
  beilmsu
  ceilmsu
  afilmsu
  bfilmsu
  cfilmsu
  adgjnsu
  bdgjnsu
  cdgjnsu
  aegjnsu
  begjnsu
  cegjnsu
  afgjnsu
  bfgjnsu
  cfgjnsu
  adhjnsu
  bdhjnsu
  cdhjnsu
  aehjnsu
  behjnsu
  cehjnsu
  afhjnsu
  bfhjnsu
  cfhjnsu
  adijnsu
  bdijnsu
  cdijnsu
  aeijnsu
  beijnsu
  ceijnsu
  afijnsu
  bfijnsu
  cfijnsu
  adgknsu
  bdgknsu
  cdgknsu
  aegknsu
  begknsu
  cegknsu
  afgknsu
  bfgknsu
  cfgknsu
  adhknsu
  bdhknsu
  cdhknsu
  aehknsu
  behknsu
  cehknsu
  afhknsu
  bfhknsu
  cfhknsu
  adiknsu
  bdiknsu
  cdiknsu
  aeiknsu
  beiknsu
  ceiknsu
  afiknsu
  bfiknsu

  cfiknsu
  adglnsu
  bdglnsu
  cdglnsu
  aeglnsu
  beglnsu
  ceglnsu
  afglnsu
  bfglnsu
  cfglnsu
  adhlnsu
  bdhlnsu
  cdhlnsu
  aehlnsu
  behlnsu
  cehlnsu
  afhlnsu
  bfhlnsu
  cfhlnsu
  adilnsu
  bdilnsu
  cdilnsu
  aeilnsu
  beilnsu
  ceilnsu
  afilnsu
  bfilnsu
  cfilnsu
  adgjosu
  bdgjosu
  cdgjosu
  aegjosu
  begjosu
  cegjosu
  afgjosu
  bfgjosu
  cfgjosu
  adhjosu
  bdhjosu
  cdhjosu
  aehjosu
  behjosu
  cehjosu
  afhjosu
  bfhjosu
  cfhjosu
  adijosu
  bdijosu
  cdijosu
  aeijosu
  beijosu
  ceijosu
  afijosu
  bfijosu
  cfijosu
  adgkosu
  bdgkosu
  cdgkosu
  aegkosu
  begkosu
  cegkosu
  afgkosu
  bfgkosu
  cfgkosu
  adhkosu
  bdhkosu
  cdhkosu
  aehkosu
  behkosu
  cehkosu
  afhkosu
  bfhkosu
  cfhkosu
  adikosu
  bdikosu
  cdikosu
  aeikosu
  beikosu
  ceikosu
  afikosu
  bfikosu
  cfikosu
  adglosu
  bdglosu
  cdglosu
  aeglosu
  beglosu
  ceglosu
  afglosu
  bfglosu
  cfglosu
  adhlosu
  bdhlosu
  cdhlosu
  aehlosu
  behlosu
  cehlosu
  afhlosu
  bfhlosu
  cfhlosu
  adilosu
  bdilosu
  cdilosu
  aeilosu
  beilosu
  ceilosu
  afilosu
  bfilosu
  cfilosu
  adgjmpv
  bdgjmpv
  cdgjmpv
  aegjmpv
  begjmpv
  cegjmpv
  afgjmpv
  bfgjmpv
  cfgjmpv
  adhjmpv
  bdhjmpv
  cdhjmpv
  aehjmpv
  behjmpv
  cehjmpv
  afhjmpv
  bfhjmpv
  cfhjmpv
  adijmpv
  bdijmpv
  cdijmpv
  aeijmpv
  beijmpv
  ceijmpv
  afijmpv
  bfijmpv
  cfijmpv
  adgkmpv
  bdgkmpv
  cdgkmpv
  aegkmpv
  begkmpv
  cegkmpv
  afgkmpv
  bfgkmpv
  cfgkmpv
  adhkmpv
  bdhkmpv
  cdhkmpv
  aehkmpv
  behkmpv
  cehkmpv
  afhkmpv
  bfhkmpv
  cfhkmpv
  adikmpv
  bdikmpv
  cdikmpv
  aeikmpv
  beikmpv
  ceikmpv
  afikmpv
  bfikmpv
  cfikmpv
  adglmpv
  bdglmpv
  cdglmpv
  aeglmpv
  beglmpv
  ceglmpv
  afglmpv
  bfglmpv
  cfglmpv
  adhlmpv
  bdhlmpv
  cdhlmpv
  aehlmpv
  behlmpv
  cehlmpv
  afhlmpv
  bfhlmpv
  cfhlmpv
  adilmpv
  bdilmpv
  cdilmpv
  aeilmpv
  beilmpv
  ceilmpv
  afilmpv
  bfilmpv
  cfilmpv
  adgjnpv
  bdgjnpv
  cdgjnpv
  aegjnpv
  begjnpv
  cegjnpv
  afgjnpv
  bfgjnpv
  cfgjnpv
  adhjnpv
  bdhjnpv
  cdhjnpv
  aehjnpv
  behjnpv
  cehjnpv
  afhjnpv
  bfhjnpv
  cfhjnpv
  adijnpv
  bdijnpv
  cdijnpv
  aeijnpv
  beijnpv
  ceijnpv
  afijnpv
  bfijnpv
  cfijnpv
  adgknpv
  bdgknpv
  cdgknpv
  aegknpv
  begknpv
  cegknpv
  afgknpv
  bfgknpv
  cfgknpv
  adhknpv
  bdhknpv
  cdhknpv
  aehknpv
  behknpv
  cehknpv
  afhknpv
  bfhknpv
  cfhknpv
  adiknpv
  bdiknpv
  cdiknpv
  aeiknpv
  beiknpv
  ceiknpv
  afiknpv
  bfiknpv
  cfiknpv
  adglnpv
  bdglnpv
  cdglnpv
  aeglnpv
  beglnpv
  ceglnpv
  afglnpv
  bfglnpv
  cfglnpv
  adhlnpv
  bdhlnpv
  cdhlnpv
  aehlnpv
  behlnpv
  cehlnpv
  afhlnpv
  bfhlnpv
  cfhlnpv
  adilnpv
  bdilnpv
  cdilnpv
  aeilnpv
  beilnpv
  ceilnpv
  afilnpv
  bfilnpv
  cfilnpv
  adgjopv
  bdgjopv
  cdgjopv
  aegjopv
begjopv
  cegjopv
  afgjopv
  bfgjopv
  cfgjopv
  adhjopv
  bdhjopv
  cdhjopv
  aehjopv
  behjopv
  cehjopv
  afhjopv
  bfhjopv
  cfhjopv
  adijopv
  bdijopv
  cdijopv
  aeijopv
  beijopv
  ceijopv
  afijopv
  bfijopv
  cfijopv
  adgkopv
  bdgkopv
  cdgkopv
  aegkopv
  begkopv
  cegkopv
  afgkopv
  bfgkopv
  cfgkopv
  adhkopv
  bdhkopv
  cdhkopv
  aehkopv
  behkopv
  cehkopv
  afhkopv
  bfhkopv
  cfhkopv
  adikopv
  bdikopv
  cdikopv
  aeikopv
  beikopv
  ceikopv
  afikopv
  bfikopv
  cfikopv
  adglopv
  bdglopv
  cdglopv
  aeglopv
  beglopv
  ceglopv
  afglopv
  bfglopv
  cfglopv
  adhlopv
  bdhlopv
  cdhlopv
  aehlopv
  behlopv
  cehlopv
  afhlopv
  bfhlopv
  cfhlopv
  adilopv
  bdilopv
  cdilopv
  aeilopv
  beilopv
  ceilopv
  afilopv
  bfilopv
  cfilopv
  adgjmqv
  bdgjmqv
  cdgjmqv
  aegjmqv
  begjmqv
  cegjmqv
  afgjmqv
  bfgjmqv
  cfgjmqv
  adhjmqv
  bdhjmqv
  cdhjmqv
  aehjmqv
  behjmqv
  cehjmqv
  afhjmqv
  bfhjmqv
  cfhjmqv
  adijmqv
  bdijmqv
  cdijmqv
  aeijmqv
  beijmqv
  ceijmqv
  afijmqv
  bfijmqv
  cfijmqv
  adgkmqv
  bdgkmqv
  cdgkmqv
  aegkmqv
  begkmqv
  cegkmqv
  afgkmqv
  bfgkmqv
  cfgkmqv
  adhkmqv
  bdhkmqv
  cdhkmqv
  aehkmqv
  behkmqv
  cehkmqv
  afhkmqv
  bfhkmqv
  cfhkmqv
  adikmqv
  bdikmqv
  cdikmqv
  aeikmqv
  beikmqv
  ceikmqv
  afikmqv
  bfikmqv
  cfikmqv
  adglmqv
  bdglmqv
  cdglmqv
  aeglmqv
  beglmqv
  ceglmqv
  afglmqv
  bfglmqv
  cfglmqv
  adhlmqv
  bdhlmqv
  cdhlmqv
  aehlmqv
  behlmqv
  cehlmqv
  afhlmqv
  bfhlmqv
  cfhlmqv
  adilmqv
  bdilmqv
  cdilmqv
  aeilmqv
  beilmqv
  ceilmqv
  afilmqv
  bfilmqv
  cfilmqv
  adgjnqv
  bdgjnqv
  cdgjnqv
  aegjnqv
  begjnqv
  cegjnqv
  afgjnqv
  bfgjnqv
  cfgjnqv
  adhjnqv
  bdhjnqv
  cdhjnqv
  aehjnqv
  behjnqv
  cehjnqv
  afhjnqv
  bfhjnqv
  cfhjnqv
  adijnqv
  bdijnqv
  cdijnqv
  aeijnqv
  beijnqv
  ceijnqv
  afijnqv
  bfijnqv
  cfijnqv
  adgknqv
  bdgknqv
  cdgknqv
  aegknqv
  begknqv
  cegknqv
  afgknqv
  bfgknqv
  cfgknqv
  adhknqv
  bdhknqv
  cdhknqv
  aehknqv
  behknqv
  cehknqv
  afhknqv
  bfhknqv
  cfhknqv
  adiknqv
  bdiknqv
  cdiknqv
  aeiknqv
  beiknqv
  ceiknqv
  afiknqv
  bfiknqv
  cfiknqv
  adglnqv
  bdglnqv
  cdglnqv
  aeglnqv
  beglnqv
  ceglnqv
  afglnqv
  bfglnqv
  cfglnqv
  adhlnqv
  bdhlnqv
  cdhlnqv
  aehlnqv
  behlnqv
  cehlnqv
  afhlnqv
  bfhlnqv
  cfhlnqv
  adilnqv
  bdilnqv
  cdilnqv
  aeilnqv
  beilnqv
  ceilnqv
  afilnqv
  bfilnqv
  cfilnqv
  adgjoqv
  bdgjoqv
  cdgjoqv
  aegjoqv
  begjoqv
  cegjoqv
  afgjoqv
  bfgjoqv
  cfgjoqv
  adhjoqv
  bdhjoqv
  cdhjoqv
  aehjoqv
  behjoqv
  cehjoqv
  afhjoqv
  bfhjoqv
  cfhjoqv
  adijoqv
  bdijoqv
  cdijoqv
  aeijoqv
  beijoqv
  ceijoqv
  afijoqv
  bfijoqv
  cfijoqv
  adgkoqv
  bdgkoqv
  cdgkoqv
  aegkoqv
  begkoqv
  cegkoqv
  afgkoqv
  bfgkoqv
  cfgkoqv
  adhkoqv
  bdhkoqv
  cdhkoqv
  aehkoqv
  behkoqv
  cehkoqv
  afhkoqv
  bfhkoqv
  cfhkoqv
  adikoqv
  bdikoqv
  cdikoqv
  aeikoqv
  beikoqv
  ceikoqv
  afikoqv
  bfikoqv
  cfikoqv
  adgloqv
  bdgloqv
  cdgloqv
  aegloqv
  begloqv
  cegloqv
  afgloqv
  bfgloqv
  cfgloqv
  adhloqv
  bdhloqv
  cdhloqv
  aehloqv
  behloqv
  cehloqv
  afhloqv
  bfhloqv
  cfhloqv
  adiloqv
  bdiloqv
  cdiloqv
  aeiloqv
  beiloqv
  ceiloqv
  afiloqv
  bfiloqv
  cfiloqv
  adgjmrv
  bdgjmrv
  cdgjmrv
  aegjmrv
  begjmrv
  cegjmrv
  afgjmrv
  bfgjmrv
  cfgjmrv
  adhjmrv
  bdhjmrv
  cdhjmrv
  aehjmrv
  behjmrv
  cehjmrv
  afhjmrv
  bfhjmrv
  cfhjmrv
  adijmrv
  bdijmrv
  cdijmrv
  aeijmrv
  beijmrv
  ceijmrv
  afijmrv
  bfijmrv
  cfijmrv
  adgkmrv
  bdgkmrv
  cdgkmrv
  aegkmrv
  begkmrv
  cegkmrv
  afgkmrv
  bfgkmrv
  cfgkmrv
  adhkmrv
  bdhkmrv
  cdhkmrv
  aehkmrv
  behkmrv
  cehkmrv
  afhkmrv
  bfhkmrv
  cfhkmrv
  adikmrv
  bdikmrv
  cdikmrv
  aeikmrv
  beikmrv
  ceikmrv
  afikmrv
  bfikmrv
  cfikmrv
  adglmrv
  bdglmrv
  cdglmrv
  aeglmrv
  beglmrv
  ceglmrv
  afglmrv
  bfglmrv
  cfglmrv
  adhlmrv
  bdhlmrv
  cdhlmrv
  aehlmrv
  behlmrv
  cehlmrv
  afhlmrv
  bfhlmrv
  cfhlmrv
  adilmrv
  bdilmrv
  cdilmrv
  aeilmrv
  beilmrv
  ceilmrv
  afilmrv
  bfilmrv
  cfilmrv
  adgjnrv
  bdgjnrv
  cdgjnrv
  aegjnrv
  begjnrv
  cegjnrv
  afgjnrv
  bfgjnrv
  cfgjnrv
  adhjnrv
  bdhjnrv
  cdhjnrv
  aehjnrv
  behjnrv
  cehjnrv
  afhjnrv
  bfhjnrv
  cfhjnrv
  adijnrv
  bdijnrv
  cdijnrv
  aeijnrv
  beijnrv
  ceijnrv
  afijnrv
  bfijnrv
  cfijnrv
  adgknrv
  bdgknrv
  cdgknrv
  aegknrv
  begknrv
  cegknrv
  afgknrv
  bfgknrv
  cfgknrv
  adhknrv
  bdhknrv
  cdhknrv
  aehknrv
  behknrv
  cehknrv
  afhknrv
  bfhknrv
  cfhknrv
  adiknrv
  bdiknrv
  cdiknrv
  aeiknrv
  beiknrv
  ceiknrv
  afiknrv
  bfiknrv
  cfiknrv
  adglnrv
  bdglnrv
  cdglnrv
  aeglnrv
  beglnrv
  ceglnrv
  afglnrv
  bfglnrv
  cfglnrv
  adhlnrv
  bdhlnrv
  cdhlnrv
  aehlnrv
  behlnrv
  cehlnrv
  afhlnrv
  bfhlnrv
  cfhlnrv
  adilnrv
  bdilnrv
  cdilnrv
  aeilnrv
  beilnrv
  ceilnrv
  afilnrv
  bfilnrv
  cfilnrv
  adgjorv
  bdgjorv
  cdgjorv
  aegjorv
  begjorv
  cegjorv
  afgjorv
  bfgjorv
  cfgjorv
  adhjorv
  bdhjorv
  cdhjorv
  aehjorv
  behjorv
  cehjorv
  afhjorv
  bfhjorv
  cfhjorv
  adijorv
  bdijorv
  cdijorv
  aeijorv
  beijorv
  ceijorv
  afijorv
  bfijorv
  cfijorv
  adgkorv
  bdgkorv
  cdgkorv
  aegkorv
  begkorv
  cegkorv
  afgkorv
  bfgkorv
  cfgkorv
  adhkorv
  bdhkorv
  cdhkorv
  aehkorv
  behkorv
  cehkorv
  afhkorv
  bfhkorv
  cfhkorv
  adikorv
  bdikorv
  cdikorv
  aeikorv
  beikorv
  ceikorv
  afikorv
  bfikorv
  cfikorv
  adglorv
  bdglorv
  cdglorv
  aeglorv
  beglorv
  ceglorv
  afglorv
  bfglorv
  cfglorv
  adhlorv
  bdhlorv
  cdhlorv
  aehlorv
  behlorv
  cehlorv
  afhlorv
  bfhlorv
  cfhlorv
  adilorv
  bdilorv
  cdilorv
  aeilorv
  beilorv
  ceilorv
  afilorv
  bfilorv
  cfilorv
  adgjmsv
  bdgjmsv
  cdgjmsv
  aegjmsv
  begjmsv
  cegjmsv
  afgjmsv
  bfgjmsv
  cfgjmsv
  adhjmsv
  bdhjmsv
  cdhjmsv
  aehjmsv
  behjmsv
  cehjmsv
  afhjmsv
  bfhjmsv
  cfhjmsv
  adijmsv
  bdijmsv
  cdijmsv
  aeijmsv
  beijmsv
  ceijmsv
  afijmsv
  bfijmsv
  cfijmsv
  adgkmsv
  bdgkmsv
  cdgkmsv
  aegkmsv
  begkmsv
  cegkmsv
  afgkmsv
  bfgkmsv
  cfgkmsv
  adhkmsv
  bdhkmsv
  cdhkmsv
  aehkmsv
  behkmsv
  cehkmsv
  afhkmsv
  bfhkmsv
  cfhkmsv
  adikmsv
  bdikmsv
  cdikmsv
  aeikmsv
  beikmsv
  ceikmsv
  afikmsv
  bfikmsv
  cfikmsv
  adglmsv
  bdglmsv
  cdglmsv
  aeglmsv
  beglmsv
  ceglmsv
  afglmsv
  bfglmsv
  cfglmsv
  adhlmsv
  bdhlmsv
  cdhlmsv
  aehlmsv
  behlmsv
  cehlmsv
  afhlmsv
  bfhlmsv
  cfhlmsv
  adilmsv
  bdilmsv
  cdilmsv
  aeilmsv
  beilmsv
  ceilmsv
  afilmsv
  bfilmsv
  cfilmsv
  adgjnsv
  bdgjnsv
  cdgjnsv
  aegjnsv
  begjnsv
  cegjnsv
  afgjnsv
  bfgjnsv
  cfgjnsv
  adhjnsv
  bdhjnsv
  cdhjnsv
  aehjnsv
  behjnsv
  cehjnsv
  afhjnsv
  bfhjnsv
  cfhjnsv
  adijnsv
  bdijnsv
  cdijnsv
  aeijnsv
  beijnsv
  ceijnsv
  afijnsv
  bfijnsv
  cfijnsv
  adgknsv
  bdgknsv
  cdgknsv
  aegknsv
  begknsv
  cegknsv
  afgknsv
  bfgknsv
  cfgknsv
  adhknsv
  bdhknsv
  cdhknsv
  aehknsv
  behknsv
  cehknsv
  afhknsv
  bfhknsv
  cfhknsv
  adiknsv
  bdiknsv
  cdiknsv
  aeiknsv
  beiknsv
  ceiknsv
  afiknsv
  bfiknsv
  cfiknsv
  adglnsv
  bdglnsv
  cdglnsv
  aeglnsv
  beglnsv
  ceglnsv
  afglnsv
  bfglnsv
  cfglnsv
  adhlnsv
  bdhlnsv
  cdhlnsv
  aehlnsv
  behlnsv
  cehlnsv
  afhlnsv
  bfhlnsv
  cfhlnsv
  adilnsv
  bdilnsv
  cdilnsv
  aeilnsv
  beilnsv
  ceilnsv
  afilnsv
  bfilnsv
  cfilnsv
  adgjosv
  bdgjosv
  cdgjosv
  aegjosv
  begjosv
  cegjosv
  afgjosv
  bfgjosv
  cfgjosv
  adhjosv
  bdhjosv
  cdhjosv
  aehjosv
  behjosv
  cehjosv
  afhjosv
  bfhjosv
  cfhjosv
  adijosv
  bdijosv
  cdijosv
  aeijosv
  beijosv
  ceijosv
  afijosv
  bfijosv
  cfijosv
  adgkosv
  bdgkosv
  cdgkosv
  aegkosv
  begkosv
  cegkosv
  afgkosv
  bfgkosv
  cfgkosv
  adhkosv
  bdhkosv
  cdhkosv
  aehkosv
  behkosv
  cehkosv
  afhkosv
  bfhkosv
  cfhkosv
  adikosv
  bdikosv
  cdikosv
  aeikosv
  beikosv
  ceikosv
  afikosv
  bfikosv
  cfikosv
  adglosv
  bdglosv
  cdglosv
  aeglosv
  beglosv
  ceglosv
  afglosv
  bfglosv
  cfglosv
  adhlosv
  bdhlosv
  cdhlosv
  aehlosv
  behlosv
  cehlosv
  afhlosv
  bfhlosv
  cfhlosv
  adilosv
  bdilosv
  cdilosv
  aeilosv
  beilosv
  ceilosv
  afilosv
  bfilosv
  cfilosv)
                "Error for: (try-phone-with-higher (build-num-lttr-list 2345678 '()) '())")

(define p-num 2345678)

(define start-my-phone-h (current-inexact-milliseconds))
(define my-list-h (try-phone-with-higher (build-num-lttr-list p-num '()) '())) 
(define stop-my-phone-h (current-inexact-milliseconds))

(define start-my-phone-r (current-inexact-milliseconds))
(define my-list-r (try-phone-with-recursion (build-num-lttr-list p-num '()) '())) 
(define stop-my-phone-r (current-inexact-milliseconds))
(define start-their-phone (current-inexact-milliseconds))
(define their-list (phone-spell-o p-num))
(define stop-their-phone (current-inexact-milliseconds))

(printf "My start time h:  ~a, my stop time h:  ~a\n" start-my-phone-h stop-my-phone-h)
(printf "My start time r:  ~a, my stop time r:  ~a\n" start-my-phone-r stop-my-phone-r)
(printf "Their start time: ~a, their stop time: ~a\n" start-their-phone stop-their-phone)
(printf "My execution time h:  ~a \n" (- stop-my-phone-h start-my-phone-h))
(printf "My execution time r:  ~a \n" (- stop-my-phone-r start-my-phone-r))
(printf "Their execution time: ~a \n" (- stop-their-phone start-their-phone))
;; I don't know how accurate this is. Usually theirs is a bit faster (like 690 ms vs 710 ms).
;; But sometimes mine comes in at 750 ms and theirs at 800 ms.
;; those times are with printing the list to the screen
;; Put it in a value, it's more like 45 to 47 ms
;; Again, theirs is usually a bit faster, but not by much.
;; Doing this: (try-phone-with-higher (build-num-lttr-list 2345678 '()) '())
;; seems a bit faster than calling build-num-lttr-list, putting it in a value,
;; and calling try-phone-with-higher using the value
;; So if you make it an 8 or 9 digit number, my versions are noticeably faster.
;; Still, it bugs me that I could not convert the text's recommended algo.
  ; (printf ": ~a \n" )
  ; (check-equal?  "Error for: ")

) ;; end module+ test 
  ; (printf ": ~a \n"  )
  ; (check-equal?  "Error for: ")
